#Functions


#***************** Docker **************************

function dps() {
    echo $#
    if [ $# -eq 1 ]; then
        sudo docker ps | grep $1 --color=always 
    else
        sudo docker ps
    fi
}

function dpsa() {
    if [ $# -eq 1 ]; then
        sudo docker ps -a | grep $1 --color=always 
    else
        sudo docker ps -a
    fi
}

function di() {
    if [ $# -eq 1 ]; then
        sudo docker images | grep $1 --color=always 
    else
        sudo docker images
    fi
}

function usbkeyboard() {
    if [[ ! -z "$1" ]]; then
        if [ $1 = "on" ]; then
            echo "Keymap changed to USB keyboard. Enabling PgUp/PgDn"
            #Map media control key to PgUp/PgDown
            #Disable Dell e5530 stupid PgUp/Down keys, which is so poorly placed.
            xmodmap -e "keycode 117=Next"
            xmodmap -e "keycode 112=Prior"
        elif [ $1 = "off" ]; then
            echo "Switching to laptop keymap. Disabling PgUp/PgDn"
            #Map media control key to PgUp/PgDown
            xmodmap -e "keycode 171=Next"
            xmodmap -e "keycode 173=Prior"
            #Disable Dell e5530 stupid PgUp/Down keys, which is so poorly placed.
            xmodmap -e "keycode 117=NoSymbol"
            xmodmap -e "keycode 112=NoSymbol"
        else
            echo "xxxxn"
        fi    
        
    else
        echo  "Usage usbkeybord on|off"
    fi

}


function remove_known_host_entry() {
    if [[ ! -z "$1" ]]; then
        cat ~/.ssh/known_hosts|sed "$1d"
        #cat ~/.ssh/known_hosts|sed "$1d" > ~/.ssh/known_hosts
    else
        echo "remove_known_host_entry <line number>"
    fi
}

#***************** JBOSS related functions ***********************
function jt() {
    echo "************* cleaning logs *************"
    cd $JBOSS4_HOME/server/st/log
    echo "" > jboss.log
    echo "************  Starting jboss ST profile in DEBUG mode **************"
    echo ""
    echo ""
    echo ""
    echo ""
    cd $JBOSS4_HOME/bin
    export JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8787"
    echo ""
    echo ""
    echo ""
    echo ""
    ./run.sh -c st -DrunSingletonScheduler=true
}


function startjboss() {
    export JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8787"
    if [ $# -ne 1 ]; then
        echo "running with no jrebel"
    fi
    cd $JBOSS4_HOME/bin
    ./run.sh
}

function startjboss_j() {
        cd $JBOSS4_HOME/bin
        export JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8787"
        ./run.sh  -DrunSingletonScheduler=true
}




# ********************** PAYSOL BUILD funcitons *******************************
function dep() {
    echo "cleaning test..."
    rm $JBOSS4_HOME/server/st/deploy/paysol-*.ear
    rm $JBOSS4_HOME/server/st/deploy/paysol-*.jar
    rm -rf $JBOSS4_HOME/server/st/work/*
    rm -rf $JBOSS4_HOME/server/st/tmp/*
    rm -rf $JBOSS4_HOME/server/default/log/*
    rm -rf $JBOSS4_HOME/server/st/log/*
    echo "deploying to test..."
    pushd `pwd`
    cp ./tests/ear/target/paysol-tests-ear-*.ear $JBOSS4_HOME/server/st/deploy
    cp `find . -name paysol-security-*.jar | grep ./tests/ear/target/` $JBOSS4_HOME/server/st/deploy

    cp ./core/ear/target/paysol-ear.ear $JBOSS4_HOME/server/default/deploy
    cp `find . -name paysol-security-*.jar | grep ./core/ear/target/` $JBOSS4_HOME/server/default/deploy
    popd
}


#********************** Postgresql related functions ******************************8
function copydb() {

    if [ $# -ne 2 ]; then
        echo "usage copydb <dbname>"
    else
        echo "Terminating backend connection to $1"
        psql -Upostgres -h localhost -c "select pg_terminate_backend(pid) from pg_stat_activity where datname='$1'"
        
        psql -Upostgres -h localhost -c "CREATE DATABASE \"$2\" WITH TEMPLATE \"$1\";"
        psql -Upostgres -h localhost $1 -c "CREATE SCHEMA onboarding AUTHORIZATION postgres;"
    fi
}

function fcreatedb() {

    if [ $# -ne 1 ]; then
        echo "usage fcreatedb <dbname>"
    else

    psql -Upostgres  -h localhost -c "select pg_terminate_backend(pid) from pg_stat_activity where datname='$1'"
        dropdb -Upostgres -h localhost $1
        createdb -Upostgres -h localhost $1 -Eutf-8 -T template0
        psql -Upostgres $1 -h localhost -c "CREATE SCHEMA audit AUTHORIZATION postgres;"
        psql -Upostgres $1 -h localhost -c "CREATE SCHEMA onboarding AUTHORIZATION postgres;"
    fi
}

function renamedb() {
     if [ $# -ne 2 ]; then
        echo "usage renamedb <oldname> <newname>"
     else
        psql -Upostgres -c "ALTER DATABASE $1 RENAME TO $2"
     fi
}

function fdropdb() {

    if [ $# -ne 1 ]; then
        echo "usage fdropdb <dbname>"
    else
    psql -h localhost -Upostgres  -c "select pg_terminate_backend(pid) from pg_stat_activity where datname='$1'"
        dropdb -Upostgres -h localhost $1
    fi
}

function mkdircd () { mkdir -p "$@" && eval cd "\"\$$#\""; }

function wo {
    if [[ -z "$WORK_DIR" ]]; then
        echo -e "\e[2mWork dir not set"
    else
        if [[ ! -z "$1" ]]; then
            cd "$WORK_DIR/$1"
        else
            echo -e "\e[2m Enter a work dir"
        fi
    fi
}

function update_po_db() {
    cd /home/sajith/work/paysol/bootstrap/data/src/main/resources
    psql -Upostgres paysol -f updatePaysol.sql
    psql -Upostgres archive -f updateArchive.sql
}


function kp () {
    if [[ -z "$1" ]]; then
        echo "usage kp <processname>"
    else
        kill -9 `ps -ef | grep $1 | grep -v grep | cut -d " " -f5`
        kill -9 `ps -ef | grep $1 | grep -v grep | cut -d " " -f4`
    fi
}

function gp () {
    if [[ -z "$1" ]]; then
        echo "usage gp <processname>"
    else
        ps -ef |  grep -v grep | grep $1
    fi
}


function sd() {
lastcommand=`fc -nl | grep sd | tail -n 1 | cut -d ";" -f 1`
exitcode=$?
while :
do
    notify-send "Task you submitted is completed 
        Task name $lastcommand
        Exit code is - `if [ $exitcode = 0 ]; then echo Success; else echo Error; fi`"
    sleep 3
done
}


function java7() {
    echo "Setting java to java7 JAVA_HOME=/home/sajith/apps/jdk1.7.0_25/"
    export JAVA_HOME=/home/sajith/apps/jdk1.7.0_67
    export PATH=$JAVA_HOME/bin:$PATH
    java -version
}

function java8() {
    echo "Setting java to java8 /home/sajith/apps/java8"
    export JAVA_HOME=/home/sajith/apps/jdk1.8.0_25
    export PATH=$JAVA_HOME/bin:$PATH
    java -version
}

function title() {
    echo -en "\033]2;$1\007"
}
